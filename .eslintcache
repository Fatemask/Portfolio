[{"/home/stella/Codes/portfolio/src/index.js":"1","/home/stella/Codes/portfolio/src/App.js":"2","/home/stella/Codes/portfolio/src/registerServiceWorker.js":"3","/home/stella/Codes/portfolio/src/Components/Footer.js":"4","/home/stella/Codes/portfolio/src/Components/Header.js":"5","/home/stella/Codes/portfolio/src/Components/About.js":"6","/home/stella/Codes/portfolio/src/Components/Resume.js":"7","/home/stella/Codes/portfolio/src/Components/Testimonials.js":"8","/home/stella/Codes/portfolio/src/Components/Portfolio.js":"9","/home/stella/Codes/portfolio/src/Components/Contact.js":"10"},{"size":254,"mtime":1612369800352,"results":"11","hashOfConfig":"12"},{"size":998,"mtime":1612369800352,"results":"13","hashOfConfig":"12"},{"size":4021,"mtime":1612369800352,"results":"14","hashOfConfig":"12"},{"size":925,"mtime":1612372367460,"results":"15","hashOfConfig":"12"},{"size":2247,"mtime":1612372379580,"results":"16","hashOfConfig":"12"},{"size":1652,"mtime":1612373104261,"results":"17","hashOfConfig":"12"},{"size":2202,"mtime":1612369800352,"results":"18","hashOfConfig":"12"},{"size":861,"mtime":1612372425140,"results":"19","hashOfConfig":"12"},{"size":1254,"mtime":1612369800352,"results":"20","hashOfConfig":"12"},{"size":4068,"mtime":1612372601958,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1gkfud",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/home/stella/Codes/portfolio/src/index.js",[],["46","47"],"/home/stella/Codes/portfolio/src/App.js",[],"/home/stella/Codes/portfolio/src/registerServiceWorker.js",[],"/home/stella/Codes/portfolio/src/Components/Footer.js",[],"/home/stella/Codes/portfolio/src/Components/Header.js",[],"/home/stella/Codes/portfolio/src/Components/About.js",["48","49","50","51","52","53","54"],"import React from \"react\";\n\nconst About = ({ data }) => {\n  if (data) {\n    var name = data.name;\n    var profilepic = \"images/\" + data.image;\n    var bio = data.bio;\n    var street = data.address.street;\n    var city = data.address.city;\n    var state = data.address.state;\n    var zip = data.address.zip;\n    var phone = data.phone;\n    var email = data.email;\n    var resumeDownload = data.resumedownload;\n  }\n\n  return (\n    <section id=\"about\">\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <img\n            className=\"profile-pic\"\n            src={profilepic}\n            alt=\"Fatema's Profile Pic\"\n          />\n        </div>\n        <div className=\"nine columns main-col\">\n          <h2>About Me</h2>\n\n          <p>{bio}</p>\n          <div className=\"row\">\n            <div className=\"columns contact-details\">\n              <h2>Contact Details</h2>\n              {/* <p className=\"address\">\n                <span>{name}</span>\n                <br />\n                <span>\n                  {street}\n                  <br />\n                  {city} {state}, {zip}\n                </span>\n                <br />\n                <span>{phone}</span>\n                <br /> */}\n                <span>{email}</span>\n              {/* </p> */}\n            </div>\n            <div className=\"columns download\">\n              <p>\n                {/* <a href={resumeDownload} className=\"button\">\n                  <i className=\"fa fa-download\"></i>Download Resume\n                </a> */}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","/home/stella/Codes/portfolio/src/Components/Resume.js",[],"/home/stella/Codes/portfolio/src/Components/Testimonials.js",["55"],"import React from \"react\";\n\nconst Testimonials = ({ data }) => {\n  if (data) {\n    var testimonials = data.testimonials.map(function (testimonials) {\n      return (\n        <li key={testimonials.user}>\n          <blockquote>\n            <p>{testimonials.text}</p>\n            <cite>{testimonials.user}</cite>\n          </blockquote>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <section id=\"testimonials\">\n      {/* <div className=\"text-container\">\n        <div className=\"row\">\n          <div className=\"two columns header-col\">\n            <h1>\n              <span>Client Testimonials</span>\n            </h1>\n          </div>\n\n          <div className=\"ten columns flex-container\">\n            <ul className=\"slides\">{testimonials}</ul>\n          </div>\n        </div>\n      </div> */}\n      {null}\n    </section>\n  );\n};\n\nexport default Testimonials;\n","/home/stella/Codes/portfolio/src/Components/Portfolio.js",[],"/home/stella/Codes/portfolio/src/Components/Contact.js",["56","57","58","59","60","61"],"import React, { useState } from \"react\";\n\nconst Contact = ({ data }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  if (data) {\n    var contactName = data.name;\n    var street = data.address.street;\n    var city = data.address.city;\n    var state = data.address.state;\n    var zip = data.address.zip;\n    var phone = data.phone;\n    var contactEmail = data.email;\n    var contactMessage = data.contactmessage;\n  }\n\n  const submitForm = () => {\n    window.open(\n      `mailto:${contactEmail}?subject=${encodeURIComponent(\n        subject\n      )}&body=${encodeURIComponent(name)} (${encodeURIComponent(\n        email\n      )}): ${encodeURIComponent(message)}`\n    );\n  };\n\n  return (\n    <section id=\"contact\">\n      <div className=\"row section-head\">\n        <div className=\"two columns header-col\">\n          <h1>\n            <span>Get In Touch.</span>\n          </h1>\n        </div>\n\n        <div className=\"ten columns\">\n          <p className=\"lead\">{contactMessage}</p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"eight columns\">\n          <form onSubmit={submitForm}>\n            <fieldset>\n              <div>\n                <label htmlFor=\"contactName\">\n                  Name <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={name}\n                  size=\"35\"\n                  id=\"contactName\"\n                  name=\"contactName\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactEmail\">\n                  Email <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={email}\n                  size=\"35\"\n                  id=\"contactEmail\"\n                  name=\"contactEmail\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactSubject\">Subject</label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={subject}\n                  size=\"35\"\n                  id=\"contactSubject\"\n                  name=\"contactSubject\"\n                  onChange={(e) => setSubject(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactMessage\">\n                  Message <span className=\"required\">*</span>\n                </label>\n                <textarea\n                  cols=\"50\"\n                  rows=\"15\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  id=\"contactMessage\"\n                  name=\"contactMessage\"\n                ></textarea>\n              </div>\n\n              <div>\n                <button onClick={submitForm} type=\"submit\" className=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </fieldset>\n          </form>\n\n          <div id=\"message-warning\"> Error boy</div>\n          <div id=\"message-success\">\n            <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n            <br />\n          </div>\n        </div>\n\n        <aside className=\"four columns footer-widgets\">\n          {/* <div className=\"widget widget_contact\">\n            <h4>Address and Phone</h4>\n            <p className=\"address\">\n              {contactName}\n              <br />\n              {contactEmail}\n              <br />\n              <br />\n              {street} <br />\n              {city}, {state} {zip}\n              <br />\n              <span>{phone}</span>\n            </p>\n          </div> */}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":5,"column":9,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":8,"column":9,"nodeType":"68","messageId":"69","endLine":8,"endColumn":15},{"ruleId":"66","severity":1,"message":"71","line":9,"column":9,"nodeType":"68","messageId":"69","endLine":9,"endColumn":13},{"ruleId":"66","severity":1,"message":"72","line":10,"column":9,"nodeType":"68","messageId":"69","endLine":10,"endColumn":14},{"ruleId":"66","severity":1,"message":"73","line":11,"column":9,"nodeType":"68","messageId":"69","endLine":11,"endColumn":12},{"ruleId":"66","severity":1,"message":"74","line":12,"column":9,"nodeType":"68","messageId":"69","endLine":12,"endColumn":14},{"ruleId":"66","severity":1,"message":"75","line":14,"column":9,"nodeType":"68","messageId":"69","endLine":14,"endColumn":23},{"ruleId":"66","severity":1,"message":"76","line":5,"column":9,"nodeType":"68","messageId":"69","endLine":5,"endColumn":21},{"ruleId":"66","severity":1,"message":"77","line":10,"column":9,"nodeType":"68","messageId":"69","endLine":10,"endColumn":20},{"ruleId":"66","severity":1,"message":"70","line":11,"column":9,"nodeType":"68","messageId":"69","endLine":11,"endColumn":15},{"ruleId":"66","severity":1,"message":"71","line":12,"column":9,"nodeType":"68","messageId":"69","endLine":12,"endColumn":13},{"ruleId":"66","severity":1,"message":"72","line":13,"column":9,"nodeType":"68","messageId":"69","endLine":13,"endColumn":14},{"ruleId":"66","severity":1,"message":"73","line":14,"column":9,"nodeType":"68","messageId":"69","endLine":14,"endColumn":12},{"ruleId":"66","severity":1,"message":"74","line":15,"column":9,"nodeType":"68","messageId":"69","endLine":15,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'street' is assigned a value but never used.","'city' is assigned a value but never used.","'state' is assigned a value but never used.","'zip' is assigned a value but never used.","'phone' is assigned a value but never used.","'resumeDownload' is assigned a value but never used.","'testimonials' is assigned a value but never used.","'contactName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]